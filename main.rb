require_relative "lib/product"
require_relative "lib/product_collection"
require_relative "lib/book"
require_relative "lib/film"
require_relative "lib/disc"

collection = ProductCollection.from_dir

# collection.sort(sort_by: :price, order: :asc) #sort_by: name, price, amount. order: asc, desc

puts "‚ùì –ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å:"

counter = collection.to_a

counter.each_with_index { |product, i| puts "#{i+1}. #{product}"}
puts "0. –í—ã—Ö–æ–¥"

basket = []

users_choice = nil

until users_choice == 0 || counter.size == 0 do
  users_choice = gets.to_i

  until users_choice.between?(0, counter.size) do
    puts "–ù–µ—Ç —Ç–æ–≤–∞—Ä–∞ —Å —Ç–∞–∫–∏–º –∞—Ä—Ç–∏–∫—É–ª–æ–º. –í—ã–±–µ—Ä–∏ –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç 1 –¥–æ #{counter.size}"
    users_choice = gets.to_i
  end

  chosed_product = counter.slice!(users_choice-1, 1)[0]
  basket << chosed_product

  puts "–í—ã –≤—ã–±—Ä–∞–ª–∏: #{chosed_product}"
  sum = 0
  basket.each { |product| sum += product.price }
  puts "üí∞ –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ —Å—É–º–º—É: #{sum}"

  puts "‚ùì –ß—Ç–æ –µ—â—ë —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å?"
  counter.each_with_index { |product, i| puts "#{i+1}. #{product}"}
  puts "0. –í—ã—Ö–æ–¥"
end

puts "üóë –í—ã –∫—É–ø–∏–ª–∏:"
basket.each_with_index { |product, i| puts "#{i+1}. #{product}"}
puts "–° –≤–∞—Å #{sum} —Ä—É–±. –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫–∏!"
